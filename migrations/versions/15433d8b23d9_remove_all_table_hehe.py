"""remove all table hehe

Revision ID: 15433d8b23d9
Revises: 194fc9357cab
Create Date: 2021-03-04 19:52:57.388366

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '15433d8b23d9'
down_revision = '194fc9357cab'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('status')
    with op.batch_alter_table('candidate', schema=None) as batch_op:
        batch_op.drop_index('ix_candidate_name')

    op.drop_table('candidate')
    op.drop_table('vote')
    op.drop_table('user')
    with op.batch_alter_table('election', schema=None) as batch_op:
        batch_op.drop_index('ix_election_date_of_election')
        batch_op.drop_index('ix_election_name_of_election')
        batch_op.drop_index('ix_election_time_of_election')

    op.drop_table('election')
    op.drop_table('type')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('type',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_type', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('election',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('owner', sa.INTEGER(), nullable=True),
    sa.Column('name_of_election', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('modified_at', sa.DATETIME(), nullable=True),
    sa.Column('date_of_election', sa.DATETIME(), nullable=True),
    sa.Column('time_of_election', sa.DATETIME(), nullable=True),
    sa.Column('link', sa.VARCHAR(), nullable=True),
    sa.Column('status_id', sa.INTEGER(), nullable=False),
    sa.Column('number_of_voters', sa.VARCHAR(), nullable=False),
    sa.Column('password', sa.VARCHAR(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['owner'], ['user.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('election', schema=None) as batch_op:
        batch_op.create_index('ix_election_time_of_election', ['time_of_election'], unique=False)
        batch_op.create_index('ix_election_name_of_election', ['name_of_election'], unique=False)
        batch_op.create_index('ix_election_date_of_election', ['date_of_election'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('user_type', sa.INTEGER(), nullable=False),
    sa.Column('verified', sa.BOOLEAN(), nullable=True),
    sa.CheckConstraint('verified IN (0, 1)'),
    sa.ForeignKeyConstraint(['user_type'], ['type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('vote',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('election_id', sa.INTEGER(), nullable=False),
    sa.Column('candidate_id', sa.INTEGER(), nullable=False),
    sa.Column('password', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate.id'], ),
    sa.ForeignKeyConstraint(['election_id'], ['election.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('candidate',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('image', sa.VARCHAR(), nullable=False),
    sa.Column('bio', sa.TEXT(), nullable=True),
    sa.Column('position', sa.VARCHAR(length=200), nullable=False),
    sa.Column('election_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['election_id'], ['election.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('candidate', schema=None) as batch_op:
        batch_op.create_index('ix_candidate_name', ['name'], unique=False)

    op.create_table('status',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
